[
    {
        "id": "5553381b.ce0098",
        "type": "tab",
        "label": "orchestrator",
        "disabled": false,
        "info": ""
    },
    {
        "id": "be8a0902.f0ab98",
        "type": "mqtt-broker",
        "z": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": ""
    },
    {
        "id": "b2367ffe.ec095",
        "type": "ds18b20",
        "z": "5553381b.ce0098",
        "name": "temperature",
        "sensorid": "28-04168471a4ff",
        "timer": "0.25",
        "x": 109,
        "y": 40,
        "wires": [
            [
                "ff81d48f.8be628"
            ]
        ]
    },
    {
        "id": "cd604d1d.33b9c",
        "type": "mqtt out",
        "z": "5553381b.ce0098",
        "name": "publisher",
        "topic": "temperature",
        "qos": "1",
        "retain": "false",
        "broker": "be8a0902.f0ab98",
        "x": 115,
        "y": 171,
        "wires": []
    },
    {
        "id": "2e7cca26.f583c6",
        "type": "mqtt in",
        "z": "5553381b.ce0098",
        "name": "subscriber",
        "topic": "temperature",
        "qos": "1",
        "broker": "be8a0902.f0ab98",
        "x": 107,
        "y": 262,
        "wires": [
            [
                "d811ab33.0253b8"
            ]
        ]
    },
    {
        "id": "d811ab33.0253b8",
        "type": "batcher",
        "z": "5553381b.ce0098",
        "name": "",
        "maxTopics": 1,
        "maxMessagesPerTopic": "6",
        "maxDelay": -1,
        "x": 110,
        "y": 350,
        "wires": [
            [
                "76f8d656.f87cb8",
                "9b4c9ca9.8a306"
            ]
        ]
    },
    {
        "id": "ff81d48f.8be628",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "add timestamp",
        "func": "\nmsg.payload = {\n    timestamp: new Date().getTime(),\n    value: msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 112,
        "y": 103,
        "wires": [
            [
                "cd604d1d.33b9c"
            ]
        ]
    },
    {
        "id": "bc8b36b3.25f828",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "add api key",
        "func": "let newMsg = {};\nnewMsg.payload = {};\nnewMsg.headers = {};\nnewMsg.headers['X-Api-Key'] = flow.get('apikey');\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 350,
        "wires": [
            [
                "30e7601e.e95c2"
            ]
        ]
    },
    {
        "id": "30e7601e.e95c2",
        "type": "http request",
        "z": "5553381b.ce0098",
        "name": "enable Wi-Fi",
        "method": "POST",
        "ret": "obj",
        "url": "127.0.0.1:5000/enable/wlan0",
        "tls": "",
        "x": 360,
        "y": 410,
        "wires": [
            [
                "97652429.76c0f8"
            ]
        ]
    },
    {
        "id": "76f8d656.f87cb8",
        "type": "change",
        "z": "5553381b.ce0098",
        "name": "store apikey",
        "rules": [
            {
                "t": "set",
                "p": "apikey",
                "pt": "flow",
                "to": "7723ad9b117a23e3c3fba67906197dfede138e6e",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 410,
        "wires": [
            [
                "b2a24ec3.a8681"
            ]
        ]
    },
    {
        "id": "97652429.76c0f8",
        "type": "switch",
        "z": "5553381b.ce0098",
        "name": "check 200",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 360,
        "y": 470,
        "wires": [
            [
                "37e806e2.063f5a"
            ],
            []
        ]
    },
    {
        "id": "e1f776c7.c2e1a8",
        "type": "http request",
        "z": "5553381b.ce0098",
        "name": "connect Wi-Fi",
        "method": "POST",
        "ret": "obj",
        "url": "127.0.0.1:5000/connect/wlan0:{{{available}}}:-1000.0:-1000.0",
        "tls": "",
        "x": 1560,
        "y": 380,
        "wires": [
            [
                "7ad990a2.4b717"
            ]
        ]
    },
    {
        "id": "7ad990a2.4b717",
        "type": "switch",
        "z": "5553381b.ce0098",
        "name": "check 200",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 1550,
        "y": 440,
        "wires": [
            [
                "ca613ea.7017ac"
            ],
            []
        ]
    },
    {
        "id": "668665.a35cf99c",
        "type": "debug",
        "z": "5553381b.ce0098",
        "name": "output",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1830,
        "y": 200,
        "wires": []
    },
    {
        "id": "7341e36e.e0afbc",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "add api key",
        "func": "let newMsg = {};\nnewMsg.payload = {};\nnewMsg.available = msg.available;\nnewMsg.headers = {};\nnewMsg.headers['X-Api-Key'] = flow.get('apikey');\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 320,
        "wires": [
            [
                "e1f776c7.c2e1a8"
            ]
        ]
    },
    {
        "id": "5f760f4c.a62c1",
        "type": "http request",
        "z": "5553381b.ce0098",
        "name": "disable Wi-Fi",
        "method": "POST",
        "ret": "obj",
        "url": "127.0.0.1:5000/disable/wlan0",
        "tls": "",
        "x": 1830,
        "y": 580,
        "wires": [
            [
                "dffede07.8bd1e"
            ]
        ]
    },
    {
        "id": "dffede07.8bd1e",
        "type": "switch",
        "z": "5553381b.ce0098",
        "name": "check 200",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1830.5,
        "y": 642,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a2b704ba.36f4f8",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "add api key",
        "func": "let newMsg = {};\nnewMsg.payload = {};\nnewMsg.headers = {};\nnewMsg.headers['X-Api-Key'] = flow.get('apikey');\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 520,
        "wires": [
            [
                "5f760f4c.a62c1"
            ]
        ]
    },
    {
        "id": "b2a24ec3.a8681",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "batch produce",
        "func": "var queue = flow.get('queue') || [];\nqueue.push(msg);\nflow.set('queue', queue);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 129,
        "y": 471,
        "wires": [
            [
                "bc8b36b3.25f828"
            ]
        ]
    },
    {
        "id": "ca613ea.7017ac",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "batch consume",
        "func": "var queue = flow.get('queue');\nif (queue.length > 0) {\n    var msg = queue.shift();\n    flow.set('queue', queue);\n    return msg;\n} else {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1840,
        "y": 320,
        "wires": [
            [
                "668665.a35cf99c",
                "361d36f2.34bf0a"
            ]
        ]
    },
    {
        "id": "9b4c9ca9.8a306",
        "type": "debug",
        "z": "5553381b.ce0098",
        "name": "batch msg",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 125.5,
        "y": 591,
        "wires": []
    },
    {
        "id": "37e806e2.063f5a",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "add api key",
        "func": "let newMsg = {};\nnewMsg.payload = {};\nnewMsg.headers = {};\nnewMsg.headers['X-Api-Key'] = flow.get('apikey');\nreturn newMsg;",
        "outputs": "1",
        "noerr": 0,
        "x": 630,
        "y": 360,
        "wires": [
            [
                "db98f2fe.5d268"
            ]
        ]
    },
    {
        "id": "db98f2fe.5d268",
        "type": "http request",
        "z": "5553381b.ce0098",
        "name": "available network",
        "method": "GET",
        "ret": "obj",
        "url": "127.0.0.1:5000/available/wlan0",
        "tls": "",
        "x": 650,
        "y": 420,
        "wires": [
            [
                "558db50e.94048c"
            ]
        ]
    },
    {
        "id": "dc91b3c.1b8865",
        "type": "switch",
        "z": "5553381b.ce0098",
        "name": "Wi-Fi or LTE",
        "property": "available",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "7341e36e.e0afbc"
            ],
            [
                "e64ba3cf.107c5"
            ]
        ]
    },
    {
        "id": "cf969610.08fa18",
        "type": "debug",
        "z": "5553381b.ce0098",
        "name": "use LTE",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1540,
        "y": 560,
        "wires": []
    },
    {
        "id": "fe36f186.f665a",
        "type": "inject",
        "z": "5553381b.ce0098",
        "name": "inject wait",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 920,
        "y": 180,
        "wires": [
            [
                "a9cf0ca9.3792e"
            ]
        ]
    },
    {
        "id": "a9cf0ca9.3792e",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "toggle wait",
        "func": "flow.set('wait', flow.get('wait') || false);\nflow.set('wait', !flow.get('wait'));\n\nmsg.wait = flow.get('wait');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "8a0b6bcc.16f218"
            ]
        ]
    },
    {
        "id": "8a0b6bcc.16f218",
        "type": "debug",
        "z": "5553381b.ce0098",
        "name": "flow.wait",
        "active": true,
        "console": "false",
        "complete": "wait",
        "x": 1300,
        "y": 180,
        "wires": []
    },
    {
        "id": "e64ba3cf.107c5",
        "type": "switch",
        "z": "5553381b.ce0098",
        "name": "wait?",
        "property": "wait",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1310,
        "y": 480,
        "wires": [
            [
                "a2b704ba.36f4f8"
            ],
            [
                "cf969610.08fa18"
            ]
        ]
    },
    {
        "id": "558db50e.94048c",
        "type": "switch",
        "z": "5553381b.ce0098",
        "name": "check 200",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 630,
        "y": 480,
        "wires": [
            [
                "ed0a2369.3f3db"
            ],
            []
        ]
    },
    {
        "id": "ed0a2369.3f3db",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "check available",
        "func": "if (msg.payload.message === '') {\n    msg.available = null;\n} else {\n    msg.available = msg.payload.message;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 480,
        "wires": [
            [
                "dc91b3c.1b8865"
            ]
        ]
    },
    {
        "id": "40a2c3c.79b7d3c",
        "type": "inject",
        "z": "5553381b.ce0098",
        "name": "print queue",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 910,
        "y": 260,
        "wires": [
            [
                "fdca9bb9.f673c8"
            ]
        ]
    },
    {
        "id": "9ccac88a.500e78",
        "type": "debug",
        "z": "5553381b.ce0098",
        "name": "flow.queue",
        "active": true,
        "console": "false",
        "complete": "queue",
        "x": 1310,
        "y": 260,
        "wires": []
    },
    {
        "id": "fdca9bb9.f673c8",
        "type": "function",
        "z": "5553381b.ce0098",
        "name": "copy queue",
        "func": "msg.queue = flow.get('queue') || [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "9ccac88a.500e78"
            ]
        ]
    },
    {
        "id": "361d36f2.34bf0a",
        "type": "switch",
        "z": "5553381b.ce0098",
        "name": "queue consumed?",
        "property": "queue.length",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1850,
        "y": 440,
        "wires": [
            [
                "ca613ea.7017ac"
            ],
            [
                "a2b704ba.36f4f8"
            ]
        ]
    }
]